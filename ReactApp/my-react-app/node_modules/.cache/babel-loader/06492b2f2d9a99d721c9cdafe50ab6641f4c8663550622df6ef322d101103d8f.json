{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ishtu\\\\OneDrive\\\\Desktop\\\\ReactApp\\\\first-app\\\\my-react-app\\\\src\\\\Components\\\\AForm.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AForm = ({\n  type\n}) => {\n  const initialValues = {\n    email: '',\n    password: ''\n    // Add more fields for signup if needed\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  const handleSubmit = (values, {\n    setSubmitting\n  }) => {\n    // Handle form submission, e.g., API call\n    // Store user data in local storage on successful login\n    localStorage.setItem('userData', JSON.stringify(values));\n    // Redirect to the home screen using React Router\n    // You'll need to implement this based on your router setup\n    // For simplicity, we'll just refresh the page for demo purposes\n    window.location.reload();\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: type === 'login' ? 'Login' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = AForm;\nexport default AForm;\nvar _c;\n$RefreshReg$(_c, \"AForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","jsxDEV","_jsxDEV","AForm","type","initialValues","email","password","validationSchema","object","string","required","handleSubmit","values","setSubmitting","localStorage","setItem","JSON","stringify","window","location","reload","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","component","_c","$RefreshReg$"],"sources":["C:/Users/ishtu/OneDrive/Desktop/ReactApp/first-app/my-react-app/src/Components/AForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst AForm = ({ type }) => {\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n    // Add more fields for signup if needed\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Required'),\r\n    password: Yup.string().required('Required'),\r\n  });\r\n\r\n  const handleSubmit = (values, { setSubmitting }) => {\r\n    // Handle form submission, e.g., API call\r\n    // Store user data in local storage on successful login\r\n    localStorage.setItem('userData', JSON.stringify(values));\r\n    // Redirect to the home screen using React Router\r\n    // You'll need to implement this based on your router setup\r\n    // For simplicity, we'll just refresh the page for demo purposes\r\n    window.location.reload();\r\n    setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <Field type=\"email\" name=\"email\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <Field type=\"password\" name=\"password\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" />\r\n        </div>\r\n\r\n        <button type=\"submit\">{type === 'login' ? 'Login' : 'Signup'}</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}