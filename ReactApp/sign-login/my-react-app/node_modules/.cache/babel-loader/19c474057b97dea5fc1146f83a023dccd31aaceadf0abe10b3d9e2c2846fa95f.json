{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[A=Z])[a-zA-Z0-9]{8,}$/;\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn`t match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["C:/Users/ishtu/OneDrive/Desktop/ReactApp/Login-Signin/my-react-app/src/SignupValidation.js"],"sourcesContent":["function Validation(values){\r\n    let error ={}\r\n    const email_pattern =/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*\\d)(?=.*[A=Z])[a-zA-Z0-9]{8,}$/\r\n    if(values.name===\"\"){\r\n        error.name=\"Name should not be empty\"\r\n    }\r\n    else{\r\n        error.name=\"\"\r\n    }\r\n    if(values.email===\"\"){\r\n        error.email=\"Name should not be empty\"\r\n    }\r\n    else if(!email_pattern.test(values.email)){\r\n        error.email=\"Email Didn`t match\"\r\n    }\r\n    else{\r\n        error.email=\"\"\r\n    }\r\n    if(values.password===\"\"){\r\n        error.password=\"Password should not be empty\"\r\n    }else if(!password_pattern.test(values.password))\r\n    {\r\n        error.password=\"Password didn't match\"\r\n    }else{\r\n        error.password=\"\"\r\n    }\r\nreturn error;\r\n        }\r\n    export default Validation;\r\n\r\n"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAE,CAAC,CAAC;EACb,MAAMC,aAAa,GAAE,4BAA4B;EACjD,MAAMC,gBAAgB,GAAG,sCAAsC;EAC/D,IAAGH,MAAM,CAACI,IAAI,KAAG,EAAE,EAAC;IAChBH,KAAK,CAACG,IAAI,GAAC,0BAA0B;EACzC,CAAC,MACG;IACAH,KAAK,CAACG,IAAI,GAAC,EAAE;EACjB;EACA,IAAGJ,MAAM,CAACK,KAAK,KAAG,EAAE,EAAC;IACjBJ,KAAK,CAACI,KAAK,GAAC,0BAA0B;EAC1C,CAAC,MACI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACtCJ,KAAK,CAACI,KAAK,GAAC,oBAAoB;EACpC,CAAC,MACG;IACAJ,KAAK,CAACI,KAAK,GAAC,EAAE;EAClB;EACA,IAAGL,MAAM,CAACO,QAAQ,KAAG,EAAE,EAAC;IACpBN,KAAK,CAACM,QAAQ,GAAC,8BAA8B;EACjD,CAAC,MAAK,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAChD;IACIN,KAAK,CAACM,QAAQ,GAAC,uBAAuB;EAC1C,CAAC,MAAI;IACDN,KAAK,CAACM,QAAQ,GAAC,EAAE;EACrB;EACJ,OAAON,KAAK;AACJ;AAACO,EAAA,GA5BAT,UAAU;AA6Bf,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}